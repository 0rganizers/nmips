# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: >
      Build nmips plugin on ${{ matrix.os }}.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-11, windows-latest]
        include:
          - os: ubuntu-latest
            pkg: sudo apt-get install -y openssl
            artifact: libnmips.so
            name: linux
          - os: macos-11
            pkg: brew install openssl
            artifact: lib*nmips.dylib
            name: macos
          - os: windows-latest
            pkg: choco install openssl
            artifact: '*nmips.dll'
            name: windows

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      - name: Install Packages
        run: ${{ matrix.pkg }}

      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: pip install meson ninja
      
      # - name: Add msbuild to PATH
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   uses: microsoft/setup-msbuild@v1.0.2

      - name: Really do msbuild this time pls
        if: ${{ matrix.os == 'windows-latest' }}
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64
        
      - name: Build
        env:
          IDA_PASS: ${{ secrets.IDA_PASS }}
        run: ./build.sh
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: nmips_${{ matrix.name }}
          path: build/builddir/${{ matrix.artifact }}
